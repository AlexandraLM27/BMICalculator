@page "/bmi"
@inject HttpClient Http

<h3 class="mt-3">Calculator BMI</h3>

<div class="card p-4 shadow rounded" style="max-width: 500px;">
    <div class="mb-3">
        <label class="form-label">Greutate (kg)</label>
        <input type="number" step="0.1" class="form-control" @bind="Weight" min="1" required />
    </div>

    <div class="mb-3">
        <label class="form-label">Înălțime (cm)</label>
        <input type="number" step="0.1" class="form-control" @bind="Height" min="1" required />
    </div>

    <button class="btn btn-primary" @onclick="CalculateBMI">Calculează</button>

    @if (!string.IsNullOrEmpty(Result))
    {
        <div class="alert alert-info mt-3">@Result</div>
    }

    @if (!string.IsNullOrEmpty(Error))
    {
        <div class="alert alert-danger mt-3">@Error</div>
    }
</div>

@code {
    private double Weight;
    private double Height;
    private string? Result;
    private string? Error;

    private async Task CalculateBMI()
    {
        Result = null;
        Error = null;

        if (Weight <= 0 || Height <= 0)
        {
            Error = "Completează greutatea și înălțimea cu valori pozitive.";
            return;
        }

        try
        {
            var url = $"http://localhost:5035/bmi?weightKg={Weight}&heightCm={Height}";
            var response = await Http.GetFromJsonAsync<BMIResponse>(url);
            if (response is not null)
                Result = $"BMI: {response.BMI} — Categoria: {response.Category}";
        }
        catch (HttpRequestException ex)
        {
            Error = "Nu s-a putut conecta la API: " + ex.Message;
        }
        catch (Exception)
        {
            Error = "A apărut o eroare neașteptată.";
        }
    }

    public class BMIResponse
    {
        public double BMI { get; set; }
        public string Category { get; set; } = string.Empty;
    }
}
